<nguwp:NGPage
    x:Class="JumpPoint.Uwp.TabbedShell"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:JumpPoint.Uwp"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:nguwp="using:NittyGritty.Uwp"
    xmlns:nguwpext="using:NittyGritty.Uwp.Extensions"
    xmlns:winui="using:Microsoft.UI.Xaml.Controls"
    xmlns:controls="using:JumpPoint.Uwp.Controls"
    xmlns:viewmodels="using:JumpPoint.ViewModels"
    xmlns:converters="using:JumpPoint.Uwp.Converters"
    xmlns:services="using:JumpPoint.Platform.Services"
    xmlns:gtext="using:Glif.Core.Text"
    xmlns:items="using:JumpPoint.Platform.Items"
    xmlns:ngmodels="using:NittyGritty.Models"
    xmlns:selectors="using:NittyGritty.Uwp.Selectors"
    xmlns:i="using:Microsoft.Xaml.Interactivity"
    xmlns:core="using:Microsoft.Xaml.Interactions.Core"
    xmlns:ngconv="using:NittyGritty.Uwp.Converters"
    xmlns:models="using:JumpPoint.Platform.Models"
    xmlns:actions="using:NittyGritty.Uwp.Interactivity.Actions"
    xmlns:jpactions="using:JumpPoint.Uwp.Interactivity.Actions"
    xmlns:store="using:NittyGritty.Platform.Store"
    xmlns:ngservices="using:NittyGritty.Uwp.Services"
    xmlns:extensions="using:NittyGritty.Uwp.Extensions"
    xmlns:behaviors="using:JumpPoint.Uwp.Interactivity.Behaviors"
    xmlns:humanizer="using:Humanizer"
    xmlns:animations="using:Microsoft.Toolkit.Uwp.UI.Animations"
    xmlns:commands="using:JumpPoint.ViewModels.Commands"
    xmlns:helpers="using:JumpPoint.Uwp.Helpers"
    mc:Ignorable="d"
    extensions:ApplicationViewExtensions.Title="{x:Bind ViewModel.CurrentTab.Context.PathInfo.DisplayName, Mode=OneWay}"
    extensions:TitleBarExtensions.ButtonBackgroundColor="Transparent"
    extensions:TitleBarExtensions.ButtonInactiveBackgroundColor="Transparent"
    Background="{ThemeResource ApplicationPageBackgroundThemeBrush}"
    DataContext="{Binding Source={StaticResource Locator}, Path=TabbedShell}">
    
    <nguwp:NGPage.Resources>
        <Thickness x:Key="NavigationViewHeaderMargin">12,0</Thickness>
        <Thickness x:Key="NavigationViewContentPresenterMargin">0</Thickness>
        <converters:ShellItemContentTemplateSelector x:Key="ShellItemContentTemplateSelector">
            <converters:ShellItemContentTemplateSelector.Text>
                <DataTemplate x:DataType="x:String">
                    <TextBlock Text="{x:Bind }"
                               FontFamily="{x:Bind helpers:ServiceLocator.AppSettings.Font, Mode=OneWay}"
                               FontStyle="{x:Bind gtext:FontStyleExtensions.ToPlatform(helpers:ServiceLocator.AppSettings.FontStyle), Mode=OneWay}"
                               FontWeight="{x:Bind gtext:FontWeightExtensions.ToPlatform(helpers:ServiceLocator.AppSettings.FontWeight), Mode=OneWay}"
                               FontStretch="{x:Bind gtext:FontStretchExtensions.ToPlatform(helpers:ServiceLocator.AppSettings.FontStretch), Mode=OneWay}" />
                </DataTemplate>
            </converters:ShellItemContentTemplateSelector.Text>
            <converters:ShellItemContentTemplateSelector.JumpPointItem>
                <DataTemplate x:DataType="items:JumpPointItem">
                    <TextBlock Text="{x:Bind DisplayName, Mode=OneWay}"
                               FontFamily="{x:Bind helpers:ServiceLocator.AppSettings.Font, Mode=OneWay}"
                               FontStyle="{x:Bind gtext:FontStyleExtensions.ToPlatform(helpers:ServiceLocator.AppSettings.FontStyle), Mode=OneWay}"
                               FontWeight="{x:Bind gtext:FontWeightExtensions.ToPlatform(helpers:ServiceLocator.AppSettings.FontWeight), Mode=OneWay}"
                               FontStretch="{x:Bind gtext:FontStretchExtensions.ToPlatform(helpers:ServiceLocator.AppSettings.FontStretch), Mode=OneWay}" />
                </DataTemplate>
            </converters:ShellItemContentTemplateSelector.JumpPointItem>
        </converters:ShellItemContentTemplateSelector>

        <DataTemplate x:Key="ItemTemplate"
                      x:DataType="ngmodels:ShellItem">
            <winui:NavigationViewItem Icon="{x:Bind converters:IconConverter.GetShellItemIcon(Key, Tag), Mode=OneWay}"
                                      MenuItemsSource="{x:Bind Children, Mode=OneWay}"
                                      SelectsOnInvoked="{x:Bind converters:NavigationViewItemConverter.SelectsOnInvoked(Key), Mode=OneWay}"
                                      Tag="{x:Bind Mode=OneWay}">
                <ContentControl Content="{x:Bind Content, Mode=OneWay}"
                                ContentTemplateSelector="{StaticResource ShellItemContentTemplateSelector}" />
                <ToolTipService.ToolTip>
                    <ContentControl Content="{x:Bind Content, Mode=OneWay}"
                                    ContentTemplateSelector="{StaticResource ShellItemContentTemplateSelector}" />
                </ToolTipService.ToolTip>
            </winui:NavigationViewItem>
        </DataTemplate>
        <DataTemplate x:Key="HeaderTemplate"
                      x:DataType="ngmodels:ShellItem">
            <winui:NavigationViewItemHeader Content="{x:Bind Content, Mode=OneWay}" />
        </DataTemplate>
        <DataTemplate x:Key="SeparatorTemplate">
            <winui:NavigationViewItemSeparator />
        </DataTemplate>
        <selectors:ShellItemTemplateSelector x:Key="ShellItemTemplateSelector"
                                             ItemTemplate="{StaticResource ItemTemplate}"
                                             HeaderTemplate="{StaticResource HeaderTemplate}"
                                             SeparatorTemplate="{StaticResource SeparatorTemplate}" />
    </nguwp:NGPage.Resources>

    <Grid>
        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup  x:Name="AdaptiveVisualStateGroup">
                <VisualState x:Name="VisualStateNarrow">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="0" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="paneNavigationBar.(Grid.Row)"
                                Value="0" />
                        <Setter Target="paneNavigationBar.(Grid.Column)"
                                Value="0" />
                        <Setter Target="paneNavigationBar.(Grid.ColumnSpan)"
                                Value="3" />
                        <Setter Target="paneNavigationBar.Margin"
                                Value="0,0,0,4" />
                    </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="VisualStateNormal">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="640" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <!--TODO: change properties for normal view-->
                        <Setter Target="paneNavigationBar.(Grid.Row)"
                                Value="1" />
                        <Setter Target="paneNavigationBar.(Grid.Column)"
                                Value="1" />
                        <Setter Target="paneNavigationBar.(Grid.ColumnSpan)"
                                Value="1" />
                        <Setter Target="paneNavigationBar.Margin"
                                Value="4,0" />
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>
        <!--<Grid.ChildrenTransitions>
            <TransitionCollection>
                <RepositionThemeTransition />
            </TransitionCollection>
        </Grid.ChildrenTransitions>-->
        <Grid.RowDefinitions>
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>

        <controls:PanedTabView2 TabItemsSource="{x:Bind ViewModel.Tabs}"
                                SelectedItem="{Binding CurrentTab, Mode=TwoWay}"
                                MenuItemsSource="{x:Bind ViewModel.ShellItems.Sidebar, Mode=OneWay}"
                                FooterMenuItemsSource="{x:Bind ViewModel.ShellItems.Footer, Mode=OneWay}"
                                MenuItemTemplateSelector="{StaticResource ShellItemTemplateSelector}"
                                HeaderBackground="{ThemeResource TitleBarBackground}"
                                x:Name="panedTabView">
            <controls:PanedTabView2.TabHeaderTemplate>
                <DataTemplate x:DataType="viewmodels:TabViewModel">
                    <Grid CornerRadius="12,12,0,0"
                          Margin="1,0"
                          Padding="12,2,8,2"
                          Background="Transparent">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <Grid.ContextFlyout>
                            <MenuFlyout>
                                <MenuFlyoutItem CommandParameter="{Binding}"
                                                Command="{StaticResource NewTabCommand}" />
                                <MenuFlyoutItem CommandParameter="{Binding}"
                                                Command="{StaticResource DuplicateTabCommand}" />
                                <MenuFlyoutItem CommandParameter="{Binding}"
                                                Command="{StaticResource MoveTabToNewWindowCommand}" />
                                <MenuFlyoutItem CommandParameter="{Binding}"
                                                Command="{StaticResource CloseTabCommand}" />
                                <MenuFlyoutItem CommandParameter="{Binding}"
                                                Command="{StaticResource CloseOtherTabsCommand}" />
                            </MenuFlyout>
                        </Grid.ContextFlyout>
                        
                        <Viewbox Width="20"
                                 Height="20">
                            <IconSourceElement IconSource="{x:Bind converters:IconConverter.GetPathTypeIconSource(Context.PathInfo.Type, Context.PathInfo.Tag), Mode=OneWay}" />
                        </Viewbox>
                        <TextBlock Text="{x:Bind Context.PathInfo.DisplayName, Mode=OneWay}"
                                   VerticalAlignment="Center"
                                   Grid.Column="1"
                                   FontSize="14"
                                   FontFamily="{x:Bind helpers:ServiceLocator.AppSettings.Font, Mode=OneWay}"
                                   FontWeight="{x:Bind gtext:FontWeightExtensions.ToPlatform(helpers:ServiceLocator.AppSettings.FontWeight), Mode=OneWay}"
                                   FontStyle="{x:Bind gtext:FontStyleExtensions.ToPlatform(helpers:ServiceLocator.AppSettings.FontStyle), Mode=OneWay}"
                                   FontStretch="{x:Bind gtext:FontStretchExtensions.ToPlatform(helpers:ServiceLocator.AppSettings.FontStretch), Mode=OneWay}"
                                   Padding="8,0,20,0"/>
                        <Button Grid.Column="2"
                                Padding="4"
                                BorderThickness="0"
                                Background="Transparent"
                                VerticalAlignment="Center"
                                CommandParameter="{Binding}"
                                Command="{StaticResource CloseTabCommand}">
                            <IconSourceElement IconSource="{StaticResource CloseTabIconSmall}" />
                        </Button>
                    </Grid>
                </DataTemplate>
            </controls:PanedTabView2.TabHeaderTemplate>
            <controls:PanedTabView2.TabItemTemplate>
                <DataTemplate x:DataType="viewmodels:TabViewModel">
                    <Frame nguwpext:FrameExtensions.Key="{x:Bind Key, Mode=OneWay}">
                        <i:Interaction.Behaviors>
                            <behaviors:FrameNavigatedContextBehavior SelectedTab="{Binding ElementName=panedTabView, Path=SelectedItem}" />
                        </i:Interaction.Behaviors>
                        <animations:Implicit.ShowAnimations>
                            <animations:TranslationAnimation EasingMode="EaseOut"
                                                             Duration="0:0:0.5"
                                                             From="50,0,0"
                                                             To="0" />
                            <animations:OpacityAnimation Duration="0:0:0.25"
                                                         From="0"
                                                         To="1"
                                                         EasingMode="EaseOut"/>
                        </animations:Implicit.ShowAnimations>
                        <animations:Implicit.HideAnimations>
                            <animations:OpacityAnimation Duration="0:0:0.01"
                                                         From="1"
                                                         To="0"
                                                         EasingMode="EaseOut" />
                        </animations:Implicit.HideAnimations>
                    </Frame>
                </DataTemplate>
            </controls:PanedTabView2.TabItemTemplate>
            <controls:PanedTabView2.LeftHeader>
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>
                    <Grid x:Name="leftInset"
                          Background="Transparent" />
                    <Button Style="{StaticResource TitleBarButton}"
                            Grid.Column="1"
                            Click="toggleMenu_Click">
                        <IconSourceElement IconSource="{StaticResource MenuIcon}" />
                        <!--<FontIcon FontFamily="Segoe MDL2 Assets"
                                  Glyph="&#xE700;"
                                  FontSize="14" />-->
                    </Button>
                </Grid>
            </controls:PanedTabView2.LeftHeader>
            <controls:PanedTabView2.RightHeader>
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>
                    <Button Style="{StaticResource TitleBarButton}"
                            CommandParameter="{x:Null}"
                            Command="{x:Bind ViewModel.NewTabCommand}">
                        <IconSourceElement IconSource="{StaticResource AddTabIcon}" />
                    </Button>
                    <Grid x:Name="rightInset"
                          Background="Transparent"
                          Grid.Column="1" />
                </Grid>
            </controls:PanedTabView2.RightHeader>
            <controls:PanedTabView2.TabStripContent>
                <Grid Loaded="OnRibbonLoaded"
                      SizeChanged="OnRibbonSizeChanged"
                      Canvas.ZIndex="100">
                    <Border x:Name="borderShadow"
                            HorizontalAlignment="Stretch"
                            VerticalAlignment="Stretch" />

                    <Grid Background="{ThemeResource ApplicationPageBackgroundThemeBrush}"
                          Padding="4">
                        <Grid.ChildrenTransitions>
                            <TransitionCollection>
                                <RepositionThemeTransition />
                            </TransitionCollection>
                        </Grid.ChildrenTransitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>

                        <StackPanel Orientation="Horizontal"
                                    Spacing="4"
                                    Grid.Row="1">
                            <StackPanel.Resources>
                                <SolidColorBrush x:Key="ButtonBackgroundDisabled"
                                                 Color="Transparent" />
                            </StackPanel.Resources>
                            <controls:IconButton CommandParameter="{x:Bind ViewModel.CurrentTab, Mode=OneWay}"
                                                 Command="{StaticResource BackCommand}"
                                                 x:Name="navBack"
                                                 IsEnabled="{x:Bind ((ngservices:NavigationService)ViewModel.CurrentTab.NavigationHelper.NavigationService).Context.CanGoBack, Mode=OneWay}"
                                                 x:Load="{x:Bind helpers:ServiceLocator.AppSettings.ShowBack, Mode=OneWay}"
                                                 IsCompact="True" />
                            <controls:IconButton CommandParameter="{x:Bind ViewModel.CurrentTab, Mode=OneWay}"
                                                 Command="{StaticResource ForwardCommand}"
                                                 x:Name="navForward"
                                                 IsEnabled="{x:Bind ((ngservices:NavigationService)ViewModel.CurrentTab.NavigationHelper.NavigationService).Context.CanGoForward, Mode=OneWay}"
                                                 x:Load="{x:Bind helpers:ServiceLocator.AppSettings.ShowForward, Mode=OneWay}"
                                                 IsCompact="True" />
                            <controls:IconButton CommandParameter="{x:Bind ViewModel.CurrentTab, Mode=OneWay}"
                                                 Command="{StaticResource UpCommand}"
                                                 IsEnabled="{x:Bind commands:NavigationBar.IsUpEnabled(ViewModel.CurrentTab.Context), Mode=OneWay}"
                                                 x:Name="navUp"
                                                 x:Load="{x:Bind helpers:ServiceLocator.AppSettings.ShowUp, Mode=OneWay}"
                                                 IsCompact="True" />
                            <controls:IconButton Command="{StaticResource RefreshCommand}"
                                                 x:Name="navRefresh"
                                                 x:Load="{x:Bind helpers:ServiceLocator.AppSettings.ShowRefresh, Mode=OneWay}"
                                                 IsCompact="True" />
                            <controls:IconButton CommandParameter="{x:Bind ViewModel.CurrentTab, Mode=OneWay}"
                                                 Command="{StaticResource DashboardCommand}"
                                                 x:Name="navDashboard"
                                                 x:Load="{x:Bind helpers:ServiceLocator.AppSettings.ShowDashboard, Mode=OneWay}"
                                                 IsCompact="True" />
                        </StackPanel>

                        <Grid x:Name="paneNavigationBar"
                              Grid.Row="1"
                              Grid.Column="1"
                              Margin="4,0"
                              CornerRadius="4"
                              Background="{ThemeResource SystemChromeMediumLowColor}"
                              x:Load="{x:Bind ViewModel.IsEditingPath, Mode=OneWay, Converter={StaticResource NegateBooleanConverter}}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <winui:ProgressBar VerticalAlignment="Stretch"
                                               HorizontalAlignment="Stretch"
                                               Maximum="{x:Bind ViewModel.CurrentTab.Context.ProgressInfo.Total, Mode=OneWay, Converter={StaticResource ZeroWhenNullConverter}}"
                                               Minimum="0"
                                               Opacity="0.5"
                                               Background="Transparent"
                                               CornerRadius="4"
                                               Grid.ColumnSpan="3"
                                               MinHeight="31"
                                               Value="{x:Bind ViewModel.CurrentTab.Context.ProgressInfo.Value, Mode=OneWay}"
                                               IsIndeterminate="{x:Bind ViewModel.CurrentTab.Context.ProgressInfo.Total, Mode=OneWay, Converter={StaticResource IsNullConverter}}"
                                               Visibility="{x:Bind ViewModel.CurrentTab.Context.ProgressInfo.IsRunning, Mode=OneWay, Converter={StaticResource VisibleWhenTrueConverter}}" />
                            <Button Background="Transparent"
                                    VerticalAlignment="Stretch"
                                    BorderThickness="0"
                                    Margin="2">
                                <Viewbox Width="16"
                                         Height="16">
                                    <IconSourceElement IconSource="{x:Bind converters:IconConverter.GetPathTypeIconSource(ViewModel.CurrentTab.Context.PathInfo.Type, ViewModel.CurrentTab.Context.PathInfo.Tag), Mode=OneWay}" />
                                </Viewbox>
                                <Button.Resources>
                                    <converters:AppBarSeparatorVisibilityConverter x:Name="pathToolSeparator">
                                        <ngconv:Binding Value="{x:Bind commands:NavigationBar.IsAddToWorkspaceEnabled(ViewModel.CurrentTab.Context), Mode=OneWay}" />
                                        <ngconv:Binding Value="{x:Bind commands:NavigationBar.IsAddToFavoritesEnabled(ViewModel.CurrentTab.Context), Mode=OneWay}" />
                                        <ngconv:Binding Value="{x:Bind commands:NavigationBar.IsRemoveFromFavoritesEnabled(ViewModel.CurrentTab.Context), Mode=OneWay}" />
                                    </converters:AppBarSeparatorVisibilityConverter>
                                    <converters:AppBarSeparatorVisibilityConverter x:Name="pathTemplateSeparator">
                                        <ngconv:Binding Value="{x:Bind commands:NavigationBar.IsSetWorkspaceTemplateEnabled(ViewModel.CurrentTab.Context), Mode=OneWay}" />
                                        <ngconv:Binding Value="{x:Bind commands:NavigationBar.IsSetFolderTemplateEnabled(ViewModel.CurrentTab.Context), Mode=OneWay}" />
                                    </converters:AppBarSeparatorVisibilityConverter>
                                </Button.Resources>
                                <Button.Flyout>
                                    <MenuFlyout Placement="BottomEdgeAlignedLeft">
                                        <MenuFlyoutItem CommandParameter="{x:Bind ViewModel.CurrentTab.Context, Mode=OneWay}"
                                                        Command="{StaticResource CopyPathCommand}" />
                                        <MenuFlyoutSeparator />
                                        <MenuFlyoutItem CommandParameter="{x:Bind ViewModel.CurrentTab.Context, Mode=OneWay}"
                                                        Command="{StaticResource OpenPathInNewWindowCommand}" />
                                        <MenuFlyoutItem CommandParameter="{x:Bind ViewModel.CurrentTab.Context, Mode=OneWay}"
                                                        Command="{StaticResource OpenPathInFileExplorerCommand}"
                                                        IsEnabled="{x:Bind commands:NavigationBar.IsOpenInFileExplorerEnabled(ViewModel.CurrentTab.Context), Mode=OneWay}"
                                                        Visibility="{Binding RelativeSource={RelativeSource Mode=Self}, Path=IsEnabled}" />
                                        <MenuFlyoutItem CommandParameter="{x:Bind ViewModel.CurrentTab.Context, Mode=OneWay}"
                                                        Command="{StaticResource OpenPathInCommandPromptCommand}"
                                                        IsEnabled="{x:Bind commands:NavigationBar.IsOpenInCommandPromptEnabled(ViewModel.CurrentTab.Context), Mode=OneWay}"
                                                        Visibility="{Binding RelativeSource={RelativeSource Mode=Self}, Path=IsEnabled}" />
                                        <MenuFlyoutItem CommandParameter="{x:Bind ViewModel.CurrentTab.Context, Mode=OneWay}"
                                                        Command="{StaticResource OpenPathInPowershellCommand}"
                                                        IsEnabled="{x:Bind commands:NavigationBar.IsOpenInPowershellEnabled(ViewModel.CurrentTab.Context), Mode=OneWay}"
                                                        Visibility="{Binding RelativeSource={RelativeSource Mode=Self}, Path=IsEnabled}" />

                                        <MenuFlyoutSeparator Visibility="{x:Bind pathToolSeparator.Output, Mode=OneWay}" />
                                        <MenuFlyoutItem CommandParameter="{x:Bind ViewModel.CurrentTab.Context, Mode=OneWay}"
                                                        Command="{StaticResource AddPathToWorkspaceCommand}"
                                                        IsEnabled="{x:Bind commands:NavigationBar.IsAddToWorkspaceEnabled(ViewModel.CurrentTab.Context), Mode=OneWay}"
                                                        Visibility="{Binding RelativeSource={RelativeSource Mode=Self}, Path=IsEnabled}" />
                                        <MenuFlyoutItem CommandParameter="{x:Bind ViewModel.CurrentTab.Context, Mode=OneWay}"
                                                        Command="{StaticResource AddPathToFavoritesCommand}"
                                                        IsEnabled="{x:Bind commands:NavigationBar.IsAddToFavoritesEnabled(ViewModel.CurrentTab.Context), Mode=OneWay}"
                                                        Visibility="{Binding RelativeSource={RelativeSource Mode=Self}, Path=IsEnabled}" />
                                        <MenuFlyoutItem CommandParameter="{x:Bind ViewModel.CurrentTab.Context, Mode=OneWay}"
                                                        Command="{StaticResource RemovePathFromFavoritesCommand}"
                                                        IsEnabled="{x:Bind commands:NavigationBar.IsRemoveFromFavoritesEnabled(ViewModel.CurrentTab.Context), Mode=OneWay}"
                                                        Visibility="{Binding RelativeSource={RelativeSource Mode=Self}, Path=IsEnabled}" />

                                        <MenuFlyoutSeparator Visibility="{x:Bind pathTemplateSeparator.Output, Mode=OneWay}" />
                                        <MenuFlyoutItem CommandParameter="{x:Bind ViewModel.CurrentTab.Context, Mode=OneWay}"
                                                        Command="{StaticResource SetPathWorkspaceTemplateCommand}"
                                                        IsEnabled="{x:Bind commands:NavigationBar.IsSetWorkspaceTemplateEnabled(ViewModel.CurrentTab.Context), Mode=OneWay}"
                                                        Visibility="{Binding RelativeSource={RelativeSource Mode=Self}, Path=IsEnabled}" />
                                        <MenuFlyoutItem CommandParameter="{x:Bind ViewModel.CurrentTab.Context, Mode=OneWay}"
                                                        Command="{StaticResource SetPathFolderTemplateCommand}"
                                                        IsEnabled="{x:Bind commands:NavigationBar.IsSetFolderTemplateEnabled(ViewModel.CurrentTab.Context), Mode=OneWay}"
                                                        Visibility="{Binding RelativeSource={RelativeSource Mode=Self}, Path=IsEnabled}" />

                                        <MenuFlyoutSeparator />
                                        <MenuFlyoutItem CommandParameter="{x:Bind ViewModel.CurrentTab.Context, Mode=OneWay}"
                                                        Command="{StaticResource SharePathCommand}" />
                                        <MenuFlyoutItem CommandParameter="{x:Bind ViewModel.CurrentTab.Context, Mode=OneWay}"
                                                        Command="{StaticResource PathPropertiesCommand}"
                                                        IsEnabled="{x:Bind commands:NavigationBar.IsPropertiesEnabled(ViewModel.CurrentTab.Context), Mode=OneWay}"
                                                        Visibility="{Binding RelativeSource={RelativeSource Mode=Self}, Path=IsEnabled}" />
                                    </MenuFlyout>
                                </Button.Flyout>
                            </Button>
                            <ScrollViewer HorizontalScrollBarVisibility="Auto"
                                          VerticalScrollBarVisibility="Hidden"
                                          VerticalScrollMode="Disabled"
                                          Grid.Column="1"
                                          Padding="4,0"
                                          Style="{StaticResource TabScrollViewerStyle}">
                                <winui:ItemsRepeater ItemsSource="{x:Bind ViewModel.CurrentTab.Context.PathInfo.Breadcrumbs, Mode=OneWay}"
                                                     VerticalAlignment="Center">
                                    <winui:ItemsRepeater.Layout>
                                        <winui:StackLayout Orientation="Horizontal"
                                                           Spacing="4" />
                                    </winui:ItemsRepeater.Layout>
                                    <winui:ItemsRepeater.ItemTemplate>
                                        <DataTemplate x:DataType="models:Breadcrumb">
                                            <HyperlinkButton Padding="0"
                                                             Foreground="{ThemeResource ApplicationForegroundThemeBrush}"
                                                             CommandParameter="{x:Bind Mode=OneWay}"
                                                             Command="{Binding Source={StaticResource Locator}, Path=TabbedShell.BreadcrumbCommand}">
                                                <StackPanel Orientation="Horizontal">
                                                    <TextBlock Text="{x:Bind DisplayName, Mode=OneWay}"
                                                               FontSize="14"
                                                               Margin="0,0,4,0" />
                                                    <FontIcon FontFamily="Segoe MDL2 Assets"
                                                              Glyph="&#xE00F;"
                                                              FontSize="12" />
                                                </StackPanel>
                                            </HyperlinkButton>
                                        </DataTemplate>
                                    </winui:ItemsRepeater.ItemTemplate>
                                </winui:ItemsRepeater>
                            </ScrollViewer>
                            <StackPanel Grid.Column="2"
                                        Margin="2"
                                        Orientation="Horizontal">
                                <controls:IconButton CommandParameter="{x:Bind ViewModel.CurrentTab.Context, Mode=OneWay}"
                                                     Command="{StaticResource PinPathCommand}"
                                                     IsCompact="True"
                                                     Visibility="{x:Bind ViewModel.CurrentTab.Context.IsPinned, Mode=OneWay, Converter={StaticResource VisibleWhenFalseConverter}}" />
                                <controls:IconButton CommandParameter="{x:Bind ViewModel.CurrentTab.Context, Mode=OneWay}"
                                                     Command="{StaticResource UnpinPathCommand}"
                                                     IsCompact="True"
                                                     Visibility="{x:Bind ViewModel.CurrentTab.Context.IsPinned, Mode=OneWay}" />
                                <controls:IconButton Command="{StaticResource EditPathCommand}"
                                                     IsCompact="True" />
                            </StackPanel>
                        </Grid>
                        <AutoSuggestBox Grid.Row="1"
                                        Grid.Column="1"
                                        Margin="4,0"
                                        CornerRadius="4"
                                        QueryIcon="Forward"
                                        x:Name="txtPathQuery"
                                        x:Load="{x:Bind ViewModel.IsEditingPath, Mode=OneWay}"
                                        Text="{x:Bind ViewModel.PathQuery, Mode=TwoWay}">
                            <i:Interaction.Behaviors>
                                <core:EventTriggerBehavior EventName="Loaded">
                                    <actions:FocusAction />
                                </core:EventTriggerBehavior>
                                <core:EventTriggerBehavior EventName="QuerySubmitted">
                                    <core:InvokeCommandAction Command="{x:Bind ViewModel.CommitPathCommand}" />
                                </core:EventTriggerBehavior>
                                <core:EventTriggerBehavior EventName="GotFocus">
                                    <jpactions:SelectAllAutoSuggestBoxAction />
                                </core:EventTriggerBehavior>
                                <core:EventTriggerBehavior EventName="LostFocus">
                                    <core:InvokeCommandAction Command="{x:Bind ViewModel.RollbackPathCommand}" />
                                </core:EventTriggerBehavior>
                            </i:Interaction.Behaviors>
                        </AutoSuggestBox>

                        <StackPanel Grid.Row="1"
                                    Grid.Column="2"
                                    Spacing="4"
                                    Orientation="Horizontal">
                            <controls:IconButton x:Name="navNewItem"
                                                 x:Load="{x:Bind helpers:ServiceLocator.AppSettings.ShowNewItem, Mode=OneWay}"
                                                 Command="{StaticResource NewItemCommand}"
                                                 IsCompact="True">
                                <controls:IconButton.Flyout>
                                    <MenuFlyout Placement="Bottom">
                                        <MenuFlyoutItem CommandParameter="{x:Bind ViewModel.CurrentTab, Mode=OneWay}"
                                                        Command="{StaticResource NewFolderCommand}"
                                                        IsEnabled="{x:Bind commands:NavigationBar.IsNewFolderEnabled(ViewModel.CurrentTab.Context), Mode=OneWay}"/>
                                        <MenuFlyoutItem CommandParameter="{x:Bind ViewModel.CurrentTab, Mode=OneWay}"
                                                        Command="{StaticResource NewWorkspaceCommand}" />
                                        <MenuFlyoutItem CommandParameter="{x:Bind ViewModel.CurrentTab, Mode=OneWay}"
                                                        Command="{StaticResource NewAppLinkCommand}" />
                                    </MenuFlyout>
                                </controls:IconButton.Flyout>
                            </controls:IconButton>
                            <controls:IconButton x:Name="navLayout"
                                                 x:Load="{x:Bind helpers:ServiceLocator.AppSettings.ShowLayout, Mode=OneWay}"
                                                 Command="{StaticResource LayoutCommand}"
                                                 IsCompact="True">
                                <controls:IconButton.Flyout>
                                    <MenuFlyout Placement="Bottom">
                                        <winui:RadioMenuFlyoutItem Command="{StaticResource GridLayoutCommand}"
                                                                   IsChecked="{x:Bind helpers:ServiceLocator.AppSettings.IsGridLayout, Mode=TwoWay}"
                                                                   GroupName="Layout" />
                                        <winui:RadioMenuFlyoutItem Command="{StaticResource DetailsLayoutCommand}"
                                                                   IsChecked="{x:Bind helpers:ServiceLocator.AppSettings.IsDetailsLayout, Mode=TwoWay}"
                                                                   GroupName="Layout" />
                                        <winui:RadioMenuFlyoutItem Command="{StaticResource TilesLayoutCommand}"
                                                                   IsChecked="{x:Bind helpers:ServiceLocator.AppSettings.IsTilesLayout, Mode=TwoWay}"
                                                                   GroupName="Layout" />
                                        <winui:RadioMenuFlyoutItem Command="{StaticResource ListLayoutCommand}"
                                                                   IsChecked="{x:Bind helpers:ServiceLocator.AppSettings.IsListLayout, Mode=TwoWay}"
                                                                   GroupName="Layout" />
                                    </MenuFlyout>
                                </controls:IconButton.Flyout>
                            </controls:IconButton>
                            <Button x:Name="btnSupportDeveloper"
                                    VerticalAlignment="Stretch"
                                    Background="Transparent"
                                    BorderThickness="0">
                                <Button.Resources>
                                    <winui:TeachingTip x:Name="supportDeveloperTip"
                                                       Target="{x:Bind btnSupportDeveloper}"
                                                       IsLightDismissEnabled="True"
                                                       PreferredPlacement="BottomRight"
                                                       Title="Support the Developer"
                                                       Subtitle="Loving the app? Your support is much appreciated."
                                                       IsOpen="False"
                                                       Background="Transparent">

                                        <winui:TeachingTip.IconSource>
                                            <winui:BitmapIconSource ShowAsMonochrome="False"
                                                                    UriSource="/Assets/Icons/Support.png" />
                                        </winui:TeachingTip.IconSource>
                                        <winui:TeachingTip.Content>
                                            <StackPanel Spacing="4">
                                                <TextBlock Text="Your donations are deeply appreciated and will help in making Jump Point more awesome."
                                                           TextWrapping="WrapWholeWords" />
                                                <winui:ProgressBar IsIndeterminate="{x:Bind ViewModel.LoadAddOnsCommand.IsRunning, Mode=OneWay}"
                                                                   Visibility="{x:Bind ViewModel.LoadAddOnsCommand.IsRunning, Mode=OneWay}" />
                                                <Pivot Margin="-12,0">
                                                    <Pivot.HeaderTemplate>
                                                        <DataTemplate>
                                                            <TextBlock Style="{StaticResource BodyTextBlockStyle}"
                                                                       FontWeight="SemiBold"
                                                                       Text="{Binding}" />
                                                        </DataTemplate>
                                                    </Pivot.HeaderTemplate>
                                                    <PivotItem Header="Monthly"
                                                               Margin="12,0">
                                                        <winui:ItemsRepeater ItemsSource="{x:Bind ViewModel.Subscriptions, Mode=OneWay}">
                                                            <winui:ItemsRepeater.Layout>
                                                                <winui:UniformGridLayout MinColumnSpacing="4"
                                                                                         MinRowSpacing="4"
                                                                                         ItemsJustification="Start"
                                                                                         ItemsStretch="Fill"
                                                                                         MinItemWidth="75"
                                                                                         MinItemHeight="50" />
                                                            </winui:ItemsRepeater.Layout>
                                                            <DataTemplate x:DataType="store:SubscriptionAddOn">
                                                                <Button HorizontalAlignment="Stretch"
                                                                        HorizontalContentAlignment="Center"
                                                                        VerticalAlignment="Stretch"
                                                                        VerticalContentAlignment="Center"
                                                                        Background="Transparent"
                                                                        CommandParameter="{x:Bind}"
                                                                        Command="{Binding Source={StaticResource Locator}, Path=TabbedShell.PurchaseAddOnCommand}"
                                                                        BorderThickness="0">
                                                                    <Grid>
                                                                        <TextBlock Text="{x:Bind Price, Mode=OneWay}"
                                                                                   Visibility="{x:Bind IsActive, Mode=OneWay, Converter={StaticResource VisibleWhenFalseConverter}}" />
                                                                        <Image Source="/Assets/Icons/Celebrate.png"
                                                                               Visibility="{x:Bind IsActive, Mode=OneWay}"
                                                                               Width="20"
                                                                               Height="20" />
                                                                    </Grid>
                                                                </Button>
                                                            </DataTemplate>
                                                        </winui:ItemsRepeater>
                                                    </PivotItem>
                                                    <PivotItem Header="One-Time"
                                                               Margin="12,0">
                                                        <winui:ItemsRepeater ItemsSource="{x:Bind ViewModel.Durables, Mode=OneWay}">
                                                            <winui:ItemsRepeater.Layout>
                                                                <winui:UniformGridLayout MinColumnSpacing="4"
                                                                                         MinRowSpacing="4"
                                                                                         ItemsJustification="Start"
                                                                                         ItemsStretch="Fill"
                                                                                         MinItemWidth="75"
                                                                                         MinItemHeight="50" />
                                                            </winui:ItemsRepeater.Layout>
                                                            <DataTemplate x:DataType="store:DurableAddOn">
                                                                <Button HorizontalAlignment="Stretch"
                                                                        HorizontalContentAlignment="Center"
                                                                        VerticalAlignment="Stretch"
                                                                        VerticalContentAlignment="Center"
                                                                        Background="Transparent"
                                                                        CommandParameter="{x:Bind}"
                                                                        Command="{Binding Source={StaticResource Locator}, Path=TabbedShell.PurchaseAddOnCommand}"
                                                                        BorderThickness="0">
                                                                    <Grid>
                                                                        <TextBlock Text="{x:Bind Price, Mode=OneWay}"
                                                                                   Visibility="{x:Bind IsActive, Mode=OneWay, Converter={StaticResource VisibleWhenFalseConverter}}" />
                                                                        <Image Source="/Assets/Icons/Celebrate.png"
                                                                               Visibility="{x:Bind IsActive, Mode=OneWay}"
                                                                               Width="20"
                                                                               Height="20" />
                                                                    </Grid>
                                                                </Button>
                                                            </DataTemplate>
                                                        </winui:ItemsRepeater>
                                                    </PivotItem>
                                                </Pivot>

                                                <TextBlock Text="You could also:"
                                                           FontWeight="SemiBold"
                                                           Margin="0,8,0,0" />
                                                <Button Content="Manage Subscriptions"
                                                        HorizontalAlignment="Stretch"
                                                        Command="{x:Bind ViewModel.ManageSubscriptionsCommand}" />
                                                <Button Content="Rate us on the Microsoft Store"
                                                        HorizontalAlignment="Stretch"
                                                        Command="{x:Bind ViewModel.RateCommand}" />
                                                <Button Content="Submit an issue on Github"
                                                        HorizontalAlignment="Stretch"
                                                        Command="{x:Bind ViewModel.GithubIssueCommand}" />
                                            </StackPanel>
                                        </winui:TeachingTip.Content>
                                    </winui:TeachingTip>
                                </Button.Resources>
                                <Image Width="18"
                                       Height="18">
                                    <Image.Source>
                                        <BitmapImage DecodePixelHeight="18"
                                                     DecodePixelWidth="18"
                                                     DecodePixelType="Logical"
                                                     UriSource="/Assets/Icons/Support.png" />
                                    </Image.Source>
                                </Image>
                                <i:Interaction.Behaviors>
                                    <core:EventTriggerBehavior EventName="Click">
                                        <core:ChangePropertyAction TargetObject="{x:Bind supportDeveloperTip}"
                                                                   PropertyName="IsOpen">
                                            <core:ChangePropertyAction.Value>
                                                <x:Boolean>True</x:Boolean>
                                            </core:ChangePropertyAction.Value>
                                        </core:ChangePropertyAction>
                                    </core:EventTriggerBehavior>
                                </i:Interaction.Behaviors>
                            </Button>
                            <controls:IconButton Command="{StaticResource MoreCommand}"
                                                 IsCompact="True">
                                <controls:IconButton.Flyout>
                                    <MenuFlyout Placement="BottomEdgeAlignedRight">
                                        <MenuFlyoutItem CommandParameter="{x:Bind ViewModel.CurrentTab, Mode=OneWay}"
                                                        Command="{StaticResource NewTabCommand}" />
                                        <MenuFlyoutItem CommandParameter="{x:Bind ViewModel.CurrentTab.Context, Mode=OneWay}"
                                                        Command="{StaticResource NewWindowCommand}" />
                                        <MenuFlyoutSubItem Text="New Item">
                                            <MenuFlyoutSubItem.Icon>
                                                <IconSourceElement IconSource="{StaticResource NewItemIcon}" />
                                            </MenuFlyoutSubItem.Icon>
                                            <MenuFlyoutItem CommandParameter="{x:Bind ViewModel.CurrentTab, Mode=OneWay}"
                                                            Command="{StaticResource NewFolderCommand}"
                                                            IsEnabled="{x:Bind commands:NavigationBar.IsNewFolderEnabled(ViewModel.CurrentTab.Context), Mode=OneWay}"/>
                                            <MenuFlyoutItem CommandParameter="{x:Bind ViewModel.CurrentTab, Mode=OneWay}"
                                                            Command="{StaticResource NewWorkspaceCommand}" />
                                            <MenuFlyoutItem CommandParameter="{x:Bind ViewModel.CurrentTab, Mode=OneWay}"
                                                            Command="{StaticResource NewAppLinkCommand}" />
                                        </MenuFlyoutSubItem>
                                        <MenuFlyoutSeparator />
                                        <MenuFlyoutSubItem Text="Layout">
                                            <MenuFlyoutSubItem.Icon>
                                                <IconSourceElement IconSource="{StaticResource LayoutIcon}" />
                                            </MenuFlyoutSubItem.Icon>
                                            <winui:RadioMenuFlyoutItem Command="{StaticResource GridLayoutCommand}"
                                                                       IsChecked="{x:Bind helpers:ServiceLocator.AppSettings.IsGridLayout, Mode=TwoWay}" />
                                            <winui:RadioMenuFlyoutItem Command="{StaticResource DetailsLayoutCommand}"
                                                                       IsChecked="{x:Bind helpers:ServiceLocator.AppSettings.IsDetailsLayout, Mode=TwoWay}" />
                                            <winui:RadioMenuFlyoutItem Command="{StaticResource TilesLayoutCommand}"
                                                                       IsChecked="{x:Bind helpers:ServiceLocator.AppSettings.IsTilesLayout, Mode=TwoWay}" />
                                            <winui:RadioMenuFlyoutItem Command="{StaticResource ListLayoutCommand}"
                                                                       IsChecked="{x:Bind helpers:ServiceLocator.AppSettings.IsListLayout, Mode=TwoWay}" />
                                        </MenuFlyoutSubItem>
                                        <MenuFlyoutSubItem Text="Show/Hide">
                                            <MenuFlyoutSubItem.Icon>
                                                <IconSourceElement IconSource="{StaticResource ShowHideIcon}" />
                                            </MenuFlyoutSubItem.Icon>
                                            <ToggleMenuFlyoutItem Text="Item Checkbox"
                                                                  IsChecked="{x:Bind helpers:ServiceLocator.AppSettings.ShowCheckbox, Mode=TwoWay}">
                                                <ToggleMenuFlyoutItem.Icon>
                                                    <IconSourceElement IconSource="{StaticResource ItemCheckboxIcon}" />
                                                </ToggleMenuFlyoutItem.Icon>
                                            </ToggleMenuFlyoutItem>
                                            <ToggleMenuFlyoutItem Text="File Extension"
                                                                  IsChecked="{x:Bind helpers:ServiceLocator.AppSettings.ShowFileExtension, Mode=TwoWay}">
                                                <ToggleMenuFlyoutItem.Icon>
                                                    <IconSourceElement IconSource="{StaticResource FileExtensionIcon}" />
                                                </ToggleMenuFlyoutItem.Icon>
                                            </ToggleMenuFlyoutItem>
                                            <ToggleMenuFlyoutItem Text="Hidden Items"
                                                                  IsChecked="{x:Bind helpers:ServiceLocator.AppSettings.ShowHiddenItems, Mode=TwoWay}">
                                                <ToggleMenuFlyoutItem.Icon>
                                                    <IconSourceElement IconSource="{StaticResource HiddenItemsIcon}" />
                                                </ToggleMenuFlyoutItem.Icon>
                                            </ToggleMenuFlyoutItem>
                                            <MenuFlyoutSeparator />
                                            <ToggleMenuFlyoutItem Text="Back button"
                                                                  IsChecked="{x:Bind helpers:ServiceLocator.AppSettings.ShowBack, Mode=TwoWay}">
                                                <ToggleMenuFlyoutItem.Icon>
                                                    <IconSourceElement IconSource="{StaticResource BackIcon}" />
                                                </ToggleMenuFlyoutItem.Icon>
                                            </ToggleMenuFlyoutItem>
                                            <ToggleMenuFlyoutItem Text="Forward button"
                                                                  IsChecked="{x:Bind helpers:ServiceLocator.AppSettings.ShowForward, Mode=TwoWay}">
                                                <ToggleMenuFlyoutItem.Icon>
                                                    <IconSourceElement IconSource="{StaticResource ForwardIcon}" />
                                                </ToggleMenuFlyoutItem.Icon>
                                            </ToggleMenuFlyoutItem>
                                            <ToggleMenuFlyoutItem Text="Up button"
                                                                  IsChecked="{x:Bind helpers:ServiceLocator.AppSettings.ShowUp, Mode=TwoWay}">
                                                <ToggleMenuFlyoutItem.Icon>
                                                    <IconSourceElement IconSource="{StaticResource UpIcon}" />
                                                </ToggleMenuFlyoutItem.Icon>
                                            </ToggleMenuFlyoutItem>
                                            <ToggleMenuFlyoutItem Text="Refresh button"
                                                                  IsChecked="{x:Bind helpers:ServiceLocator.AppSettings.ShowRefresh, Mode=TwoWay}">
                                                <ToggleMenuFlyoutItem.Icon>
                                                    <IconSourceElement IconSource="{StaticResource RefreshIcon}" />
                                                </ToggleMenuFlyoutItem.Icon>
                                            </ToggleMenuFlyoutItem>
                                            <ToggleMenuFlyoutItem Text="Dashboard button"
                                                                  IsChecked="{x:Bind helpers:ServiceLocator.AppSettings.ShowDashboard, Mode=TwoWay}">
                                                <ToggleMenuFlyoutItem.Icon>
                                                    <IconSourceElement IconSource="{StaticResource DashboardIcon}" />
                                                </ToggleMenuFlyoutItem.Icon>
                                            </ToggleMenuFlyoutItem>
                                            <ToggleMenuFlyoutItem Text="New Item button"
                                                                  IsChecked="{x:Bind helpers:ServiceLocator.AppSettings.ShowNewItem, Mode=TwoWay}">
                                                <ToggleMenuFlyoutItem.Icon>
                                                    <IconSourceElement IconSource="{StaticResource NewItemIcon}" />
                                                </ToggleMenuFlyoutItem.Icon>
                                            </ToggleMenuFlyoutItem>
                                            <ToggleMenuFlyoutItem Text="Layout button"
                                                                  IsChecked="{x:Bind helpers:ServiceLocator.AppSettings.ShowLayout, Mode=TwoWay}">
                                                <ToggleMenuFlyoutItem.Icon>
                                                    <IconSourceElement IconSource="{StaticResource LayoutIcon}" />
                                                </ToggleMenuFlyoutItem.Icon>
                                            </ToggleMenuFlyoutItem>
                                        </MenuFlyoutSubItem>
                                        <MenuFlyoutSeparator />
                                        <MenuFlyoutItem CommandParameter="{x:Bind ViewModel.CurrentTab, Mode=OneWay}"
                                                        Command="{StaticResource SettingsCommand}" />
                                    </MenuFlyout>
                                </controls:IconButton.Flyout>
                            </controls:IconButton>
                        </StackPanel>

                        <Grid x:Name="paneToolBar"
                              Grid.Row="2"
                              Grid.ColumnSpan="3"
                              Margin="0,4,0,0"
                              Visibility="{x:Bind converters:VisibilityConverter.IsToolbarVisible(ViewModel.CurrentTab.Context.PathInfo.Type), Mode=OneWay}">
                            <Grid.ChildrenTransitions>
                                <TransitionCollection>
                                    <RepositionThemeTransition />
                                </TransitionCollection>
                            </Grid.ChildrenTransitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <ScrollViewer HorizontalScrollBarVisibility="Auto"
                                          VerticalScrollBarVisibility="Hidden"
                                          VerticalScrollMode="Disabled"
                                          Style="{StaticResource TabScrollViewerStyle}">
                                <StackPanel Orientation="Horizontal"
                                            Spacing="4">
                                    <StackPanel.Resources>
                                        <SolidColorBrush x:Key="ButtonBackgroundDisabled"
                                                         Color="Transparent" />
                                    </StackPanel.Resources>
                                    <controls:IconSplitButton CommandParameter="{x:Bind ViewModel.CurrentTab.Context, Mode=OneWay}"
                                                              Command="{StaticResource CopyCommand}"
                                                              IsPrimaryButtonEnabled="{x:Bind commands:Toolbar.IsCopyEnabled(ViewModel.CurrentTab.Context), Mode=OneWay}"
                                                              IsCompact="True">
                                        <controls:IconSplitButton.Flyout>
                                            <MenuFlyout Placement="BottomEdgeAlignedRight">
                                                <MenuFlyoutItem CommandParameter="{x:Bind ViewModel.CurrentTab.Context, Mode=OneWay}"
                                                                Command="{StaticResource CutCommand}"
                                                                IsEnabled="{x:Bind commands:Toolbar.IsCutEnabled(ViewModel.CurrentTab.Context), Mode=OneWay}"/>
                                                <MenuFlyoutItem Command="{StaticResource ClipboardManagerCommand}" />
                                                <MenuFlyoutSeparator />
                                                <MenuFlyoutItem CommandParameter="{x:Bind ViewModel.CurrentTab.Context, Mode=OneWay}"
                                                                Command="{StaticResource CopyItemsPathCommand}"
                                                                IsEnabled="{x:Bind commands:Toolbar.IsCopyItemsPathEnabled(ViewModel.CurrentTab.Context), Mode=OneWay}"/>
                                            </MenuFlyout>
                                        </controls:IconSplitButton.Flyout>
                                    </controls:IconSplitButton>
                                    <controls:IconButton CommandParameter="{x:Bind ViewModel.CurrentTab.Context, Mode=OneWay}"
                                                         Command="{StaticResource PasteCommand}"
                                                         IsEnabled="{x:Bind commands:Toolbar.IsPasteEnabled(ViewModel.CurrentTab.Context, ViewModel.CommandHelper.ClipboardHasFiles), Mode=OneWay}"/>
                                    <AppBarSeparator />
                                    <controls:IconButton CommandParameter="{x:Bind ViewModel.CurrentTab.Context, Mode=OneWay}"
                                                         Command="{StaticResource RenameCommand}"
                                                         IsEnabled="{x:Bind commands:Toolbar.IsRenameEnabled(ViewModel.CurrentTab.Context), Mode=OneWay}"/>
                                    <controls:IconSplitButton CommandParameter="{x:Bind ViewModel.CurrentTab.Context, Mode=OneWay}"
                                                              Command="{StaticResource DeleteCommand}"
                                                              IsPrimaryButtonEnabled="{x:Bind commands:Toolbar.IsDeleteEnabled(ViewModel.CurrentTab.Context), Mode=OneWay}"
                                                              IsCompact="True">
                                        <controls:IconSplitButton.Flyout>
                                            <MenuFlyout Placement="BottomEdgeAlignedRight">
                                                <MenuFlyoutItem CommandParameter="{x:Bind ViewModel.CurrentTab.Context, Mode=OneWay}"
                                                                Command="{StaticResource DeletePermanentlyCommand}"
                                                                IsEnabled="{x:Bind commands:Toolbar.IsDeletePermanentlyEnabled(ViewModel.CurrentTab.Context), Mode=OneWay}"/>
                                            </MenuFlyout>
                                        </controls:IconSplitButton.Flyout>
                                    </controls:IconSplitButton>
                                    <AppBarSeparator />
                                    <controls:IconSplitButton CommandParameter="{x:Bind ViewModel.CurrentTab.Context, Mode=OneWay}"
                                                              Command="{StaticResource OpenCommand}"
                                                              IsPrimaryButtonEnabled="{x:Bind commands:Toolbar.IsOpenEnabled(ViewModel.CurrentTab.Context), Mode=OneWay}">
                                        <controls:IconSplitButton.Flyout>
                                            <MenuFlyout Placement="BottomEdgeAlignedRight">
                                                <MenuFlyoutItem CommandParameter="{x:Bind ViewModel.CurrentTab.Context, Mode=OneWay}"
                                                                Command="{StaticResource OpenWithCommand}"
                                                                IsEnabled="{x:Bind commands:Toolbar.IsOpenWithEnabled(ViewModel.CurrentTab.Context), Mode=OneWay}"/>
                                                <MenuFlyoutItem CommandParameter="{x:Bind ViewModel.CurrentTab.Context, Mode=OneWay}"
                                                                Command="{StaticResource OpenItemsInNewWindowCommand}"
                                                                IsEnabled="{x:Bind commands:Toolbar.IsOpenInNewWindowEnabled(ViewModel.CurrentTab.Context), Mode=OneWay}"
                                                                Visibility="{Binding RelativeSource={RelativeSource Mode=Self}, Path=IsEnabled}" />
                                                <MenuFlyoutItem CommandParameter="{x:Bind ViewModel.CurrentTab.Context, Mode=OneWay}"
                                                                Command="{StaticResource OpenItemsInFileExplorerCommand}"
                                                                IsEnabled="{x:Bind commands:Toolbar.IsOpenInFileExplorerEnabled(ViewModel.CurrentTab.Context), Mode=OneWay}"
                                                                Visibility="{Binding RelativeSource={RelativeSource Mode=Self}, Path=IsEnabled}" />
                                                <MenuFlyoutItem CommandParameter="{x:Bind ViewModel.CurrentTab.Context, Mode=OneWay}"
                                                                Command="{StaticResource OpenItemsInCommandPromptCommand}"
                                                                IsEnabled="{x:Bind commands:Toolbar.IsOpenInCommandPromptEnabled(ViewModel.CurrentTab.Context), Mode=OneWay}"
                                                                Visibility="{Binding RelativeSource={RelativeSource Mode=Self}, Path=IsEnabled}" />
                                                <MenuFlyoutItem CommandParameter="{x:Bind ViewModel.CurrentTab.Context, Mode=OneWay}"
                                                                Command="{StaticResource OpenItemsInPowershellCommand}"
                                                                IsEnabled="{x:Bind commands:Toolbar.IsOpenInPowershellEnabled(ViewModel.CurrentTab.Context), Mode=OneWay}"
                                                                Visibility="{Binding RelativeSource={RelativeSource Mode=Self}, Path=IsEnabled}" />
                                            </MenuFlyout>
                                        </controls:IconSplitButton.Flyout>
                                    </controls:IconSplitButton>
                                    <controls:IconButton CommandParameter="{x:Bind ViewModel.CurrentTab.Context, Mode=OneWay}"
                                                         Command="{StaticResource ShareItemsCommand}"
                                                         IsEnabled="{x:Bind commands:Toolbar.IsShareEnabled(ViewModel.CurrentTab.Context), Mode=OneWay}"
                                                         IsCompact="True" />
                                    <controls:IconButton CommandParameter="{x:Bind ViewModel.CurrentTab.Context, Mode=OneWay}"
                                                         Command="{StaticResource ItemsPropertiesCommand}"
                                                         IsEnabled="{x:Bind commands:Toolbar.IsPropertiesEnabled(ViewModel.CurrentTab.Context), Mode=OneWay}"
                                                         IsCompact="True" />
                                    <AppBarSeparator />
                                    <controls:IconButton IconSource="{StaticResource ToolsIcon}"
                                                         Content="Tools">
                                        <controls:IconButton.Resources>
                                            <converters:AppBarSeparatorVisibilityConverter x:Name="itemsTemplateSeparator">
                                                <ngconv:Binding Value="{x:Bind commands:Toolbar.IsSetWorkspaceTemplateEnabled(ViewModel.CurrentTab.Context), Mode=OneWay}" />
                                                <ngconv:Binding Value="{x:Bind commands:Toolbar.IsSetFolderTemplateEnabled(ViewModel.CurrentTab.Context), Mode=OneWay}" />
                                            </converters:AppBarSeparatorVisibilityConverter>
                                        </controls:IconButton.Resources>
                                        <controls:IconButton.Flyout>
                                            <MenuFlyout Placement="BottomEdgeAlignedLeft">
                                                <MenuFlyoutItem CommandParameter="{x:Bind ViewModel.CurrentTab.Context, Mode=OneWay}"
                                                                Command="{StaticResource AddItemsToWorkspaceCommand}"
                                                                IsEnabled="{x:Bind commands:Toolbar.IsAddToWorkspaceEnabled(ViewModel.CurrentTab.Context), Mode=OneWay}"/>
                                                <MenuFlyoutItem CommandParameter="{x:Bind ViewModel.CurrentTab.Context, Mode=OneWay}"
                                                                Command="{StaticResource AddItemsToFavoritesCommand}"
                                                                IsEnabled="{x:Bind commands:Toolbar.IsAddToFavoritesEnabled(ViewModel.CurrentTab.Context), Mode=OneWay}"
                                                                Visibility="{Binding RelativeSource={RelativeSource Mode=Self}, Path=IsEnabled}" />
                                                <MenuFlyoutItem CommandParameter="{x:Bind ViewModel.CurrentTab.Context, Mode=OneWay}"
                                                                Command="{StaticResource RemoveItemsFromFavoritesCommand}"
                                                                IsEnabled="{x:Bind commands:Toolbar.IsRemoveFromFavoritesEnabled(ViewModel.CurrentTab.Context), Mode=OneWay}"
                                                                Visibility="{Binding RelativeSource={RelativeSource Mode=Self}, Path=IsEnabled}" />
                                                <MenuFlyoutSeparator Visibility="{x:Bind itemsTemplateSeparator.Output, Mode=OneWay}" />
                                                <MenuFlyoutItem CommandParameter="{x:Bind ViewModel.CurrentTab.Context, Mode=OneWay}"
                                                                Command="{StaticResource SetItemsWorkspaceTemplateCommand}"
                                                                IsEnabled="{x:Bind commands:Toolbar.IsSetWorkspaceTemplateEnabled(ViewModel.CurrentTab.Context), Mode=OneWay}"
                                                                Visibility="{Binding RelativeSource={RelativeSource Mode=Self}, Path=IsEnabled}" />
                                                <MenuFlyoutItem CommandParameter="{x:Bind ViewModel.CurrentTab.Context, Mode=OneWay}"
                                                                Command="{StaticResource SetItemsFolderTemplateCommand}"
                                                                IsEnabled="{x:Bind commands:Toolbar.IsSetFolderTemplateEnabled(ViewModel.CurrentTab.Context), Mode=OneWay}"
                                                                Visibility="{Binding RelativeSource={RelativeSource Mode=Self}, Path=IsEnabled}" />
                                                <MenuFlyoutSeparator />
                                                <MenuFlyoutItem CommandParameter="{x:Bind ViewModel.CurrentTab.Context, Mode=OneWay}"
                                                                Command="{StaticResource MoreToolsCommand}"
                                                                IsEnabled="{x:Bind commands:Toolbar.IsMoreToolsEnabled(ViewModel.CurrentTab.Context), Mode=OneWay}"/>
                                            </MenuFlyout>
                                        </controls:IconButton.Flyout>
                                    </controls:IconButton>
                                </StackPanel>
                            </ScrollViewer>
                            <StackPanel Grid.Column="1"
                                        Margin="8,0,0,0"
                                        Orientation="Horizontal"
                                        Spacing="4">
                                <controls:IconButton Command="{StaticResource SortByCommand}"
                                                     IsCompact="True">
                                    <controls:IconButton.Flyout>
                                        <MenuFlyout Placement="BottomEdgeAlignedRight">
                                            <winui:RadioMenuFlyoutItem Command="{StaticResource SortByNameCommand}"
                                                                       IsChecked="{x:Bind helpers:ServiceLocator.AppSettings.IsSortByName, Mode=TwoWay}"
                                                                       GroupName="SortBy" />
                                            <winui:RadioMenuFlyoutItem Command="{StaticResource SortByDateModifiedCommand}"
                                                                       IsChecked="{x:Bind helpers:ServiceLocator.AppSettings.IsSortByDateModified, Mode=TwoWay}"
                                                                       GroupName="SortBy" />
                                            <winui:RadioMenuFlyoutItem Command="{StaticResource SortByDisplayTypeCommand}"
                                                                       IsChecked="{x:Bind helpers:ServiceLocator.AppSettings.IsSortByDisplayType, Mode=TwoWay}"
                                                                       GroupName="SortBy" />
                                            <winui:RadioMenuFlyoutItem Command="{StaticResource SortBySizeCommand}"
                                                                       IsChecked="{x:Bind helpers:ServiceLocator.AppSettings.IsSortBySize, Mode=TwoWay}"
                                                                       GroupName="SortBy" />
                                            <MenuFlyoutSeparator />
                                            <winui:RadioMenuFlyoutItem Command="{StaticResource SortByAscendingCommand}"
                                                                       IsChecked="{x:Bind helpers:ServiceLocator.AppSettings.IsSortAscending, Mode=TwoWay}"
                                                                       GroupName="SortDirection" />
                                            <winui:RadioMenuFlyoutItem Command="{StaticResource SortByDescendingCommand}"
                                                                       IsChecked="{x:Bind helpers:ServiceLocator.AppSettings.IsSortDescending, Mode=TwoWay}"
                                                                       GroupName="SortDirection" />
                                        </MenuFlyout>
                                    </controls:IconButton.Flyout>
                                </controls:IconButton>
                                <controls:IconButton Command="{StaticResource GroupByCommand}"
                                                     IsCompact="True">
                                    <controls:IconButton.Flyout>
                                        <MenuFlyout Placement="BottomEdgeAlignedRight">
                                            <winui:RadioMenuFlyoutItem Command="{StaticResource GroupByNoneCommand}"
                                                                       IsChecked="{x:Bind helpers:ServiceLocator.AppSettings.IsGroupByNone, Mode=TwoWay}"
                                                                       IsEnabled="{x:Bind ViewModel.CurrentTab.Context.HasCustomGrouping, Mode=OneWay, Converter={StaticResource NegateBooleanConverter}}"
                                                                       GroupName="GroupBy" />
                                            <winui:RadioMenuFlyoutItem Command="{StaticResource GroupByNameCommand}"
                                                                       IsChecked="{x:Bind helpers:ServiceLocator.AppSettings.IsGroupByName, Mode=TwoWay}"
                                                                       IsEnabled="{x:Bind ViewModel.CurrentTab.Context.HasCustomGrouping, Mode=OneWay, Converter={StaticResource NegateBooleanConverter}}"
                                                                       GroupName="GroupBy" />
                                            <winui:RadioMenuFlyoutItem Command="{StaticResource GroupByDateModifiedCommand}"
                                                                       IsChecked="{x:Bind helpers:ServiceLocator.AppSettings.IsGroupByDateModified, Mode=TwoWay}"
                                                                       IsEnabled="{x:Bind ViewModel.CurrentTab.Context.HasCustomGrouping, Mode=OneWay, Converter={StaticResource NegateBooleanConverter}}"
                                                                       GroupName="GroupBy" />
                                            <winui:RadioMenuFlyoutItem Command="{StaticResource GroupByDisplayTypeCommand}"
                                                                       IsChecked="{x:Bind helpers:ServiceLocator.AppSettings.IsGroupByDisplayType, Mode=TwoWay}"
                                                                       IsEnabled="{x:Bind ViewModel.CurrentTab.Context.HasCustomGrouping, Mode=OneWay, Converter={StaticResource NegateBooleanConverter}}"
                                                                       GroupName="GroupBy" />
                                            <winui:RadioMenuFlyoutItem Command="{StaticResource GroupBySizeCommand}"
                                                                       IsChecked="{x:Bind helpers:ServiceLocator.AppSettings.IsGroupBySize, Mode=TwoWay}"
                                                                       IsEnabled="{x:Bind ViewModel.CurrentTab.Context.HasCustomGrouping, Mode=OneWay, Converter={StaticResource NegateBooleanConverter}}"
                                                                       GroupName="GroupBy" />
                                            <winui:RadioMenuFlyoutItem Command="{StaticResource GroupByItemTypeCommand}"
                                                                       IsChecked="{x:Bind helpers:ServiceLocator.AppSettings.IsGroupByItemType, Mode=TwoWay}"
                                                                       IsEnabled="{x:Bind ViewModel.CurrentTab.Context.HasCustomGrouping, Mode=OneWay, Converter={StaticResource NegateBooleanConverter}}"
                                                                       GroupName="GroupBy" />
                                            <MenuFlyoutSeparator />
                                            <winui:RadioMenuFlyoutItem Command="{StaticResource GroupByAscendingCommand}"
                                                                       IsChecked="{x:Bind helpers:ServiceLocator.AppSettings.IsGroupAscending, Mode=TwoWay}"
                                                                       GroupName="GroupDirection" />
                                            <winui:RadioMenuFlyoutItem Command="{StaticResource GroupByDescendingCommand}"
                                                                       IsChecked="{x:Bind helpers:ServiceLocator.AppSettings.IsGroupDescending, Mode=TwoWay}"
                                                                       GroupName="GroupDirection" />
                                        </MenuFlyout>
                                    </controls:IconButton.Flyout>
                                </controls:IconButton>
                                <controls:IconButton Command="{StaticResource SelectCommand}"
                                                     IsCompact="True">
                                    <controls:IconButton.Flyout>
                                        <MenuFlyout Placement="BottomEdgeAlignedRight">
                                            <MenuFlyoutItem CommandParameter="{x:Bind ViewModel.CurrentTab.Context, Mode=OneWay}"
                                                            Command="{StaticResource SelectAllCommand}" />
                                            <MenuFlyoutItem CommandParameter="{x:Bind ViewModel.CurrentTab.Context, Mode=OneWay}"
                                                            Command="{StaticResource SelectNoneCommand}" />
                                            <MenuFlyoutItem CommandParameter="{x:Bind ViewModel.CurrentTab.Context, Mode=OneWay}"
                                                            Command="{StaticResource InvertSelectionCommand}" />
                                        </MenuFlyout>
                                    </controls:IconButton.Flyout>
                                </controls:IconButton>
                            </StackPanel>
                        </Grid>
                    </Grid>
                </Grid>
            </controls:PanedTabView2.TabStripContent>
            <i:Interaction.Behaviors>
                <core:EventTriggerBehavior EventName="ItemInvoked">
                    <core:InvokeCommandAction Command="{x:Bind ViewModel.ShellItemCommand}"
                                              InputConverter="{StaticResource NavigationViewItemInvokedEventArgsConverter}" />
                </core:EventTriggerBehavior>
            </i:Interaction.Behaviors>
        </controls:PanedTabView2>

        <winui:TeachingTip x:Name="notifyGrantAccess"
                           Title="GRANT ACCESS"
                           Subtitle="File System"
                           ShouldConstrainToRootBounds="True"
                           PreferredPlacement="Top"
                           IsLightDismissEnabled="False"
                           IsOpen="False"
                           Grid.Row="2"
                           Target="{x:Bind statusBar}">
            <winui:TeachingTip.IconSource>
                <winui:FontIconSource Glyph="&#xE1F6;" />
            </winui:TeachingTip.IconSource>
            <winui:TeachingTip.HeroContent>
                <Image Source="/Assets/Screens/grant access.png" />
            </winui:TeachingTip.HeroContent>
            <StackPanel Spacing="4">
                <TextBlock Text="You need to grant the app permission to access your file system in settings. You'll need to restart the app once completed."
                           TextWrapping="WrapWholeWords"
                           VerticalAlignment="Center" />
                <Button Style="{StaticResource AccentButtonStyle}"
                        Content="Allow Access"
                        HorizontalAlignment="Right"
                        Click="AllowAccess_Click" />
            </StackPanel>
        </winui:TeachingTip>

        <Grid Grid.Row="1"
              Background="{StaticResource SystemAccentBrush}"
              ColumnSpacing="4"
              x:Name="statusBar">
            <Grid.Resources>
                <DataTemplate x:Key="ItemStatsTemplate"
                              x:DataType="models:ItemStats">
                    <Grid ColumnSpacing="8"
                          RowSpacing="4">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <Image Width="24"
                               Height="24">
                            <Image.Source>
                                <BitmapImage DecodePixelHeight="24"
                                             DecodePixelWidth="24"
                                             DecodePixelType="Logical"
                                             UriSource="{x:Bind converters:IconConverter.GetItemIconUri(items:JumpPointItemType.Drive)}" />
                            </Image.Source>
                        </Image>
                        <TextBlock Text="{x:Bind humanizer:ToQuantityExtensions.ToQuantity('Drive', Drive, humanizer:ShowQuantityAs.Numeric), Mode=OneWay}"
                                   Grid.Column="1"
                                   VerticalAlignment="Center" />

                        <Image Width="24"
                               Height="24"
                               Grid.Row="1">
                            <Image.Source>
                                <BitmapImage DecodePixelHeight="24"
                                             DecodePixelWidth="24"
                                             DecodePixelType="Logical"
                                             UriSource="{x:Bind converters:IconConverter.GetItemIconUri(items:JumpPointItemType.Folder)}" />
                            </Image.Source>
                        </Image>
                        <TextBlock Text="{x:Bind humanizer:ToQuantityExtensions.ToQuantity('Folder', Folder, humanizer:ShowQuantityAs.Numeric), Mode=OneWay}"
                                   Grid.Column="1"
                                   Grid.Row="1"
                                   VerticalAlignment="Center" />

                        <Image Width="24"
                               Height="24"
                               Grid.Row="2">
                            <Image.Source>
                                <BitmapImage DecodePixelHeight="24"
                                             DecodePixelWidth="24"
                                             DecodePixelType="Logical"
                                             UriSource="{x:Bind converters:IconConverter.GetItemIconUri(items:JumpPointItemType.File)}" />
                            </Image.Source>
                        </Image>
                        <TextBlock Text="{x:Bind humanizer:ToQuantityExtensions.ToQuantity('File', File, humanizer:ShowQuantityAs.Numeric), Mode=OneWay}"
                                   Grid.Column="1"
                                   Grid.Row="2"
                                   VerticalAlignment="Center" />

                        <Image Width="24"
                               Height="24"
                               Grid.Row="3">
                            <Image.Source>
                                <BitmapImage DecodePixelHeight="24"
                                             DecodePixelWidth="24"
                                             DecodePixelType="Logical"
                                             UriSource="{x:Bind converters:IconConverter.GetItemIconUri(items:JumpPointItemType.Workspace)}" />
                            </Image.Source>
                        </Image>
                        <TextBlock Text="{x:Bind humanizer:ToQuantityExtensions.ToQuantity('Workspace', Workspace, humanizer:ShowQuantityAs.Numeric), Mode=OneWay}"
                                   Grid.Column="1"
                                   Grid.Row="3"
                                   VerticalAlignment="Center" />

                        <Image Width="24"
                               Height="24"
                               Grid.Row="4">
                            <Image.Source>
                                <BitmapImage DecodePixelHeight="24"
                                             DecodePixelWidth="24"
                                             DecodePixelType="Logical"
                                             UriSource="{x:Bind converters:IconConverter.GetItemIconUri(items:JumpPointItemType.AppLink)}" />
                            </Image.Source>
                        </Image>
                        <TextBlock Text="{x:Bind humanizer:ToQuantityExtensions.ToQuantity('App link', AppLink, humanizer:ShowQuantityAs.Numeric), Mode=OneWay}"
                                   Grid.Column="1"
                                   Grid.Row="4"
                                   VerticalAlignment="Center" />
                    </Grid>
                </DataTemplate>
            </Grid.Resources>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            <Button Style="{StaticResource StatusBarButton}"
                    x:Name="btnProblems">
                <Grid>
                    <TextBlock FontFamily="Segoe UI Emoji"
                               Text="&#x2705;"
                               FontSize="14"
                               IsColorFontEnabled="True"
                               x:Name="iconNoProblems"
                               Visibility="{x:Bind Problems.Count, Mode=OneWay, Converter={StaticResource VisibleWhenZeroConverter}}" />
                    <TextBlock FontFamily="Segoe UI Emoji"
                               Text="&#x26A0;"
                               FontSize="14"
                               IsColorFontEnabled="True"
                               x:Name="iconHasProblems"
                               Visibility="{x:Bind Problems.Count, Mode=OneWay, Converter={StaticResource VisibleWhenMoreThanZeroConverter}}" />
                </Grid>
                <Button.Flyout>
                    <Flyout Placement="TopEdgeAlignedLeft"
                            x:Name="flyoutProblems">
                        <Grid Padding="0,0,96,0"
                              RowSpacing="4"
                              MaxHeight="320"
                              Width="320">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="*" />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>
                            <TextBlock Text="PROBLEMS ENCOUNTERED"
                                       FontWeight="SemiBold" />
                            <ScrollViewer Grid.Row="1">
                                <winui:ItemsRepeater ItemsSource="{x:Bind Problems, Mode=OneWay}">
                                    <DataTemplate x:DataType="x:String">
                                        <TextBlock Text="{x:Bind}"
                                                   TextWrapping="WrapWholeWords" />
                                    </DataTemplate>
                                </winui:ItemsRepeater>
                            </ScrollViewer>
                            <StackPanel Orientation="Horizontal"
                                        Margin="0,8,0,0"
                                        Grid.Row="2"
                                        Spacing="8">
                                <Button Content="Clear"
                                        Style="{StaticResource AccentButtonStyle}"
                                        Click="ClearProblems_Click" />
                                <HyperlinkButton Content="Github Issues"
                                                 Foreground="{ThemeResource ApplicationForegroundThemeBrush}"
                                                 NavigateUri="https://github.com/MarkIvanDev/JumpPoint/issues" />
                            </StackPanel>
                        </Grid>
                    </Flyout>
                </Button.Flyout>
            </Button>
            <Button Style="{StaticResource StatusBarButton}"
                    Grid.Column="1">
                <TextBlock Text="{x:Bind humanizer:ToQuantityExtensions.ToQuantity('item', ViewModel.CurrentTab.Context.ItemStats.Total, humanizer:ShowQuantityAs.Numeric), Mode=OneWay}"
                           Foreground="White" />
                <Button.Flyout>
                    <Flyout Placement="TopEdgeAlignedLeft">
                        <StackPanel Spacing="4"
                                    Padding="0,0,96,0"
                                    MinWidth="160">
                            <TextBlock Text="ALL ITEMS"
                                       FontWeight="SemiBold" />
                            <TextBlock Text="{x:Bind humanizer:ToQuantityExtensions.ToQuantity('item', ViewModel.CurrentTab.Context.ItemStats.Total, humanizer:ShowQuantityAs.Numeric), Mode=OneWay}" />
                            <ContentControl Content="{x:Bind ViewModel.CurrentTab.Context.ItemStats, Mode=OneWay}"
                                            ContentTemplate="{StaticResource ItemStatsTemplate}"
                                            Margin="0,8,0,0" />
                        </StackPanel>
                    </Flyout>
                </Button.Flyout>
            </Button>

            <Button Style="{StaticResource StatusBarButton}"
                    Grid.Column="2">
                <TextBlock Text="{x:Bind humanizer:ToQuantityExtensions.ToQuantity('selected item', ViewModel.CurrentTab.Context.SelectedItems.Count, humanizer:ShowQuantityAs.Numeric), Mode=OneWay}"
                           Foreground="White" />
                <Button.Flyout>
                    <Flyout Placement="TopEdgeAlignedLeft">
                        <StackPanel Spacing="4"
                                    Padding="0,0,96,0"
                                    MinWidth="160">
                            <TextBlock Text="SELECTED ITEMS"
                                       FontWeight="SemiBold" />
                            <TextBlock Text="{x:Bind humanizer:ToQuantityExtensions.ToQuantity('item', ViewModel.CurrentTab.Context.SelectedItems.Count, humanizer:ShowQuantityAs.Numeric), Mode=OneWay}" />
                            <ContentControl Content="{x:Bind ViewModel.CurrentTab.Context.SelectedItemStats, Mode=OneWay}"
                                            ContentTemplate="{StaticResource ItemStatsTemplate}"
                                            Margin="0,8,0,0" />
                        </StackPanel>
                    </Flyout>
                </Button.Flyout>
            </Button>
        </Grid>

        <i:Interaction.Behaviors>
            <core:DataTriggerBehavior Binding="{Binding Tabs.Count}" ComparisonCondition="Equal">
                <core:DataTriggerBehavior.Value>
                    <x:Int32>0</x:Int32>
                </core:DataTriggerBehavior.Value>
                <jpactions:ConsolidateApplicationViewAction />
            </core:DataTriggerBehavior>
        </i:Interaction.Behaviors>
    </Grid>
</nguwp:NGPage>
